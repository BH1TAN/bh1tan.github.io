{"pages":[{"title":"About","text":"","link":"/about/index.html"}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/04/hello-world/"},{"title":"Geant4安装教程","text":"前言Geant4是啥就不在此赘述了，笔者因各种原因尝试安装过很多次，有成功也有失败，总结下来最重要的经验是 仔细看并尽可能理解每一行命令的作用和输出信息，出现异常及时排除 为了避免大家安装时无脑复制粘贴运行命令，友情提醒：本文有些代码需要修改（都是明显之处）才能运行。另外，本文使用cp命令移动文件和文件夹，大家在运行结束后最好手动删除应该删除的内容。在课题组内分享本文时，幸得老师和同学们诸多宝贵意见，使本文得以步步完善，在此向诸位老师和同门致以诚挚的谢意。 整体思路操作系统： Ubuntu 14.04 LTSGeant版本：Geant4.10.04.p01用时：约2小时（包含升级cmake用时约1小时） 步骤： 安装依赖库 升级cmake 下载相关文件并有序放置 正式安装geant4 测试 配置环境变量以便于下次使用 详细步骤注意：请根据自己下载的geant4版本（名称），cmake版本和自己安装时的实际路径来更改相关代码，否则必然走弯路。另外，要注意安装时的权限相关问题，例如“su”后，家文件夹变为了“/root”；如果提示权限不足，可能需要为一些文件和文件夹“chmod -R”或者“chown -R”等等。 安装依赖库清华大学校内，可先将apt的软件源改为清华大学tuna协会维护的镜像，以加快依赖库的下载速度（以及免流量），具体操作方法可访问tuna镜像站帮助页，按指导操作，注意选择正确的ubuntu版本。 在下载依赖库前先更新apt（需要确认时输入“y(回车)”以继续） 12sudo apt-get updatesudo apt-get upgrade 等待更新完成。逐行运行如下代码，安装依赖库（有部分库是为安装root准备的，非geant4必须，简便起见，一股脑全装了就好）： 1234sudo apt install git dpkg-dev make g++ gcc binutils libx11-vdev libxpm-dev libxft-dev libxext-devsudo apt install gfortran libssl-dev libpcre3-dev xlibmesa-glu-dev libglew1.5-dev libftgl-dev libmysqlclient-dev libfftw3-dev libcfitsio3-dev graphviz-dev libavahi-compat-libdnssd-dev libldap2-dev python-dev libxml2-dev libkrb5-dev libgsl0-dev libqt4-devsudo apt install libx11-dev libxext-dev libxtst-dev libxrender-dev libxmu-dev libxmuu-devsudo apt install qt-sdk 亦有教程仅安装下述依赖库，此处做个记录，未做可行性验证。 12345sudo apt-get install build-essentialsudo apt-get install cmake cmake-curses-guisudo apt-get install qt5-default qtcreatorsudo apt-get install libgl1-mesa-dev libglu1-mesa-dev mesa-common-dev libxt-devlibxmu-dev libxi-dev zlib1g-dev libgl2ps-dev libexpat1-dev libxerces-c-dev libmotif-dev 安装或升级cmake首先查看cmake版本，若&lt;3.3或未安装该软件，则需要升级或安装，否则可以跳过本节操作 1cmake --version 笔者所用的Ubuntu14.04LTS系统中默认安装的cmake版本为2.8，且不能通过apt-get升级，geant4要求cmake版本3.3以上才能编译。可访问CMake官网 查询并选择自己喜欢的版本下载，调整下文相应代码即可（本文选择了cmake-3.5.2） 1sudo wget https://cmake.org/files/v3.5/cmake-3.5.2.tar.gz 解压 1tar xvf cmake-3.5.2.tar.gz 进入cmake目录 1cd cmake-3.5.2 设置cmake安装位置为 /usr 1./bootstrap --prefix=/usr 编译，-j2代表使用双核编译，可根据自己电脑情况调整核数 1sudo make -j2 安装，这一步等待时间较长 1sudo make install 检查是否升级成功，若成功，版本应&gt;=3.3.*，否则重新安装cmake 1cmake --version 下载Geant4代码并有序放置前往Geant4官网下载source files（1个tar文件）和data files（本文撰写时为11个文件） 解压 1tar xvf geant4.10.04.p01.tar.gz 将其移动至家目录/home/yourname下，请根据自己系统情况修改yourname 1cp -r geant4.10.04.p01 /home/yourname/geant4.10.01.p01 解压11个data files，可以在图形界面全选11个压缩文件后右键，选择“extract here”将解压出的11个文件夹放入一个文件夹，命名为data（就用这个名字，勿修改）将data文件夹移至家目录/home/yourname备用，不用担心弄乱家目录，这里不是data文件夹的最终位置。 1cp -r data /home/yourname/data 在家目录下新建文件夹geant4.10-build 12cd /home/yournamemkdir geant4.10-build 此时家目录下应有3个文件夹data，geant4.10.04.p01，geant4.10-build 安装geant4进入geant4.10-build文件夹 1cd geant4.10-build 制作安装文件（下面的代码请勿直接复制运行，有个地方要你改哦） 1cmake -DCMAKE_INSTALL_PREFIX=/home/yourname/geant4.10-install/ -DGEANT4_USE_OPENGL_X11=ON -DGEANT4_USE_RAYTRACER_X11=ON -DGEANT4_USE_QT=ON -DGEANT4_BUILD_MULTITHREADED=ON /home/yourname/geant4.10.04.p01 其中：-DCMAKE_INSTALL_PREFIX 为安装位置，可根据需要调整X11 相关的两个参数表示开启图形可视化-DGEANT4_USE_QT=ON 开启QT-DGEANT4_BUILD_MULTITHREADED=ON 开启多线程并行/home/yourname/geant4.10.04.p01 geant4源代码位置（上文所说的家目录下三个文件夹之一）该代码运行结束后出现下面文字，表示成功生成安装文件 123–Configuring done–Generating done–Build files have been written to: … 编译 1make -j2 安装 1make install 这两步用时稍久，完成后可在家目录/home/yourname下看到新增了geant4.10-install文件夹。将之前准备好的data文件夹移入/home/yourname/geant4.10-install/share/Geant4-10.04.2/ 12cd /home/yourname/cp -r data geant4.10-install/share/Geant4-10.04.2 载入数据库（本载入方法在打开新terminal后将失效，此处仅作为验证正确安装而临时使用） 12cd geant4.10-install/share/Geant4-10.04.2/geant4makesudo source geant4make.sh 测试进入测试样例B1的文件夹 1cd /home/yourname/geant4.10.04.p01/example/basic/B1 编译该例程 1sudo make -j2 看到下面的文字表示编译成功 1Linking exampleB1 ...Done! 打开该模型 1exampleB1 界面如下图，注意绿色方框所示的区域不应有红色的报错代码 在蓝色框session:内输入 1\\run\\beamOn 100 可见多条粒子径迹如下图 至此，geant4安装成功！！！ 配置环境变量方便下次使用每次打开新的terminal后都手动运行source geant4make.sh是很不方便的，因此可将该命令加入启动项。实际上有很多不同的方法可以达到同样的目的，下文只是其中的一种 打开家目录下的.bashrc 1vi /home/yourname/.bashrc 在打开的文件末尾中加入下列两行代码（注意修改路径部分） 12# enable geant4 environment settingssource /home/yourname/geant4.10-install/share/Geant4-10.4.1/geant4make/geant4make.sh 保存该文件并退出，这样每次打开新终端时就不用单独输入了 日常使用今后使用geant4时，在模型路径下编译完成后，直接输入模型名称（如exampleB1）回车即可 参考文献 安装cmake http://blog.csdn.net/li872149120/article/details/77892127 安装geant4 https://leeyeel.github.io/2017/07/01/geant4-install/ 安装root https://leeyeel.github.io/2017/07/01/root-install/","link":"/2020/04/Geant4%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"},{"title":"探索100服务器的使用-1配置环境","text":"前言关于课题组所租用的高性能计算平台“探索100”的使用将分为2个部分介绍，分别是“配置环境”（本文）和“日常操作”。本文将介绍如何配置登录和使用环境，成功配置以后就不用再看了；“日常使用”则作为平常运行计算时的参考，主治忘记了操作顺序，忘记了常用命令之类的问题。大体上，这两篇文章属于“照着操作能用”的指南，若需要更详细地了解硬件配置，运行过程等细节，可参考《探索100用户使用手册》等文件。 探索100服务器相比于个人计算机，优势在于核数多（740节点*12核=8880核），内存大（370个节点32GB，370个节点48GB），运行并行任务有显著的时间提升。因此我们在日常使用MCNP，Matlab，Geant，Talys等程序时，如果任务要求内存大，或者运行时间长，可以考虑使用探索100服务器加快计算。 整体思路本文主要就两点内容： 下载SSH终端 配置连接 配置用户名和密码 配置密钥登录 下载SSH终端 windows常见的SSH终端有PuTTY（轻便简单），Xshell（久负盛名，功能丰富），MobaXterm（笔者在用，功能强大）等等。择一从官网下载即可。之所以我选择MobaXterm是因为其默认在打开ssh连接的同时打开sftp连接，可以让我们很方便地上传和下载文件。 mac直接使用terminal的SSH命令即可，我没有尝试过，欢迎了解的同学私信我添加这部分内容。 Linux直接使用terminal的SSH命令即可，我没有尝试过，欢迎了解的同学私信我添加这部分内容。 配置连接下面以MobaXterm软件为例介绍如何配置用户名密码及密钥。 点击Session 点击SSH 输入远程主机ip 打开“MobaXterm password settings”页面 点击“Credentials” 新建 输入Name（方便自己识别的名字，可以任意取） 输入用户名和密码（看课题组资料） 确定 点击“OK”关闭“MobaXterm password settings”页面 勾选“Specify username” 下拉菜单 选择第7步设置的Name 打开“Advanced SSH settings” 勾选“Use private key” 选择私钥文件（课题组资料中的key文件） 确认 这时在主界面的左边栏会出现一个黑底黄钥匙的图标，代表一个ssh连接，此时双击它会报错“无法连接”，这是因为我们还没有连接“探索100”服务器的VPN，操作方法请看下一篇文章。","link":"/2020/04/%E6%8E%A2%E7%B4%A2100%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8-1%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/"},{"title":"探索100服务器的使用-2日常操作","text":"前言关于探索100的使用，准备分为2个部分来介绍，分别是“配置环境”和“日常操作”（本文）。如果你是第一次接触“探索100”高性能计算平台，请先看“配置环境”一文。本文介绍的是最基础的提交作业及运行的操作，更详细的指南可参考《探索100用户使用手册》。 整体思路让我们假设你手头某一计算任务需要很长时间的计算，例如MCNP需要40小时的运行才能得到想要的结果。这时候寻求计算平台的帮助是很合理的了。那么，你准备好计算所需的文件（MCNP的“.i”文件，matlab的“.m”文件等）后，接下来要做的是这些事： 使用ie打开vpn 登录“探索100”前端机 准备工作目录 提交作业 检查执行情况 查看结果 ==强烈建议先在本机完整运行一次程序（使用较小的粒子数nps或较少的循环数）以便排除bug。== 自己电脑上都跑不通的代码服务器上肯定跑不通。—-某传奇师兄 使用ie打开vpn以管理员身份运行ie浏览器我也不知道为啥只能用ie, 输入前端机的完整ip地址（看课题组资料） https://166.???.???.???:?/?/?/?.cgi 在打开的页面中输入用户名和密码（看课题组资料“VPN”），以及不区分大小写的验证码，“类别”选择local。 若提示需要安装activeX，则按要求安装，然后重启ie（管理员身份运行） 登录“探索100”前端机打开你所使用的ssh软件，这里以MobaXterm为例。双击左侧栏“Sessions”中的ssh连接，若出现下面的提示，则需在右边的黑色区域输入私钥的密码（参考课题组资料“密钥”），输入时没有任何显示，输完回车即可。 出现下图表示成功登录，可以将该页面最小化但不要关闭。 准备工作目录若之前做过这一步，可以跳过。 进入工作目录 1cd ~/WORK1 新建自己名字的文件夹并进入 12mkdir [yourname]cd [yourname] 上载计算文件在左侧sftp窗口路径栏中输入自己的工作文件夹，回车 1/work1/yangyg_work/[yourname] 点击上传按钮选择自己准备好的计算文件，等待进度条跑完即上传完成。也可以直接选中本地的文件，拖动至sftp窗口中即可。 提交作业在服务器上提交计算任务是以脚本的形式进行的，和本机有区别。==切勿在终端直接运行自己的程序==。在家目录/home/yangyg/下已经准备好了提交mcnp任务的脚本模板mcnpscript和matlab任务的脚本模板matlabscript可以将其复制入自己的文件夹 1cp /home/yangyg/mcnpscript /work1/yangyg_work/[yourname] 然后按需修改内容 1nano mcnpscript 该脚本内容大体如下： 1234567891011#!/bin/sh#BSUB -q hpc_linux#BSUB -a intelmpi#BSUB -R &quot;select[mem&gt;20000]&quot;#BSUB -n 60#BSUB -o %J.output#BSUB -e %J.error#BSUB -J namemfn=&quot;name&quot;mpirun.lsf mcnp5.mpi.impi_intel i=$mfn.i o=$mfn.o r=$mfn.r 大部分情况要注意的参数是这些-q：提交队列，可选hpc_linux（需要的内存大于32G的作业），short（运行时间小于10分钟的作业），normal（其它普通作业），priority（临时紧急任务，需要向系统管理员申请使用权限）。-n：申请核心数，单用户最大240，建议使用12的整数倍以独占计算节点。经验上看mcnp作业一般用60比较合适，大于72有可能导致运行速度不明原因骤降。如果需要mcnp输出ptrac文件则只能用1。-J：作业名称，取自己易识别的名称最后两行为执行命令，和个人电脑上的命令基本一致。 确认脚本和输入文件正确后，在terminal输入下面的命令提交作业 1bsub&lt;mcnpscript ==注意是小于号&lt;==若出现无法提交，需等待60s重试的提示，表示提交的作业总共申请的核数达到了最大值。先按ctrl+C取消，同正在计算的组内同学协调，杀死部分作业或者待现有作业执行完毕后再提交。 作业提交后就可以关闭ssh软件，待运行结束再重新登录下载数据，但强烈建议等作业跑起来检查一下是否有报错、提前结束等异常情况，以便及时处理。如果是时间较长的作业，最好在运行中也定时检查一下。 检查执行情况在terminal中可使用以下常用命令bjobs：查看未完成的作业列表，STAT一列的PEND表示正在排队,RUN表示正在运行，其它状态需及时联系管理员确认原因。bjobs -l 作业号：查看作业运行的资源消耗情况bpeek 作业号：查看作业运行的标准bkill 作业号：杀死作业，执行后需等待约1分钟bjobs中该作业才会消失。 查看结果作业运行完毕，bjobs中该作业号消失，作业的输出文件（例如mcnp的“.o”等文件），作业的执行日志等均保存到了提交作业时的目录下，可按需查看和下载（在左侧sftp窗口中点选后右键下载，或者选中后直接拖至本地文件夹内）一般来说作业号.error 为空文件，非空意味着作业执行有误，最常见的错误是提交脚本mcnpscript文件在windows下编辑，出现了“换行符错误”。这种情况只需重新复制家目录下的脚本模板，在终端修改即可。 作业号.output 为作业的标准输出（相当于在个人电脑上运行时，cmd界面中显示的那些内容），若mcnp模型有误，错误信息在本文件中。 简而言之，计算软件的报错信息在作业号.output 中；作业提交中的错误信息在作业号.error 中。","link":"/2020/04/%E6%8E%A2%E7%B4%A2100%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8-2%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/"}],"tags":[],"categories":[]}